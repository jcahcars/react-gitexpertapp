{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCat","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","imagnes","GitExpertApp","categories","setCategories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAY,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAAU,EAECC,mBAAS,cAFV,mBAE1BC,EAF0B,KAEfC,EAFe,KAmBjC,OACI,uBAAMC,SAZS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAO,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OAC5BN,EAAc,MAOlB,UACI,6BAAKD,IACN,uBACCQ,KAAK,OACLC,MAAOT,EACPU,SArBW,SAACP,GAChBF,EAAcE,EAAEQ,OAAOF,c,+BCRlBG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEkCC,UAAUH,GAF5C,+DAGAI,MAAMF,GAHN,cAGZG,EAHY,gBAIEA,EAAKC,OAJP,uBAIXC,EAJW,EAIXA,KAGDC,EAAMD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACNC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXpB,kBAiBXM,GAjBW,4CAAF,sDCEPO,EAAc,SAAC,GAAoB,IAAnBJ,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAGlC,OADAc,QAAQC,IAAI,CAACN,KAAGC,QAAMV,QAElB,sBAAKgB,UAAU,2DAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,mBAAGM,UAAU,oCAAb,SAAkDN,QCA/CS,EAAQ,SAAC,GAAc,IAAbrB,EAAY,EAAZA,SAAY,ECLP,SAACA,GAAc,IAAD,EAEbd,mBACvB,CACEqB,KAAK,GACLe,SAAQ,IAL0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAsBvC,OAZCC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAK,SAAAC,GAEnBH,EAAS,CACLjB,KAAKoB,EACLL,SAAQ,SAIjB,CAACtB,IAGEuB,EDfuBK,CAAa5B,GAA9B6B,EAFmB,EAExBtB,KAAae,EAFW,EAEXA,QAIpB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAElDsB,GAAW,mBAAGJ,UAAU,mCAAb,0BAEZ,qBAAMA,UAAU,YAAhB,SAGQW,EAAQpB,KAAI,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEpBxBmB,EAAa,WAAI,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGXC,EAHW,KAU1B,OACI,qCACC,8CACA,cAAC,EAAD,CAAa/C,OAAQ+C,IACrB,uBAEC,6BAEMD,EAAWtB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEKA,SAAUA,GADLA,Y,MClB7BiC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c0b69430.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory=({setCat})=>{\r\n\r\n    const [InputValue,setInputValue]= useState('Hola Mundo');\r\n\r\n    const handleChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(InputValue.trim().length>2){\r\n            setCat(cats=>[InputValue,...cats]);\r\n            setInputValue('');\r\n        }  \r\n    }\r\n\r\n\r\n    \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <h1>{InputValue}</h1>\r\n           <input \r\n            type=\"text\"\r\n            value={InputValue}\r\n            onChange={handleChange}\r\n           />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCat: PropTypes.func.isRequired\r\n}","export const getGifs= async( category )=>{\r\n\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Vv0C0vFpZN00y88Cc7IZgMX8tB6GeWsh`;\r\n    const resp= await fetch(url);\r\n    const {data}= await resp.json();\r\n\r\n\r\n    const gifs= data.map((img) => {\r\n       return {\r\n        id:img.id,\r\n        title:img.title,\r\n        url: img.images?.downsized_medium.url\r\n       }\r\n    });\r\n\r\n    // console.log(gifs);\r\n    // setimages(gifs);\r\n    return gifs;\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log({id,title,url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n          <img src={url} alt={title} />\r\n          <p className=\"animate__animated animate__fadeIn\">{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState ,useEffect } from 'react';\r\n// import { GifGridItem } from './GifGridItem';\r\n// import {getGifs} from  '../helpers/GetGifs';\r\n\r\nimport { React } from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from  './GifGridItem';\r\n\r\nexport const GifGrid=({category})=>{\r\n\r\n    const {data:imagnes,loading}=useFetchGifs(category);\r\n    //console.log(loading);\r\n    \r\n\r\n    return( \r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>  \r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando ...</p> }\r\n\r\n            <div  className=\"card-grid\">\r\n            \r\n                {\r\n                    imagnes.map(img=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n        \r\n            </div>\r\n        </>\r\n    \r\n    )\r\n}","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n   const [state, setState] = useState(\r\n      {\r\n        data:[],\r\n        loading:true\r\n      }\r\n   );\r\n\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(imgs=>{\r\n          \r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            }) \r\n          \r\n        })\r\n    }, [category])\r\n\r\n  \r\n   return state;\r\n\r\n\r\n}\r\n","import React,{ useState }  from \"react\";\r\nimport {AddCategory}  from \"./components/AddCategory\";\r\nimport {GifGrid} from \"./components/GifGrid\";\r\n\r\n\r\nexport const GitExpertApp=()=>{\r\n //const categories=['One punch','Samurai X','Dragon Ball'];\r\n\r\nconst [categories, setCategories] = useState(['One punch']);\r\n\r\n// const addCategories=()=>{\r\n//     setCategories([...categories,'Pokemon']);\r\n// }\r\n\r\n\r\n    return (\r\n        <>       \r\n         <h1>GitExportApp</h1>\r\n         <AddCategory setCat={setCategories}/>\r\n         <hr/>\r\n\r\n          <ol>\r\n            {\r\n                categories.map(category=>\r\n                   <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                   />\r\n                )\r\n            }\r\n\r\n          </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GitExpertApp} from './GitExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GitExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}